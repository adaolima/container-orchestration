#Fri Jun  8 14:25:46 -03 2018
kind: PersistentVolume
apiVersion: v1
metadata:
  name: app-logs
  labels:
    type: local
spec:
  storageClassName: app-logs-volume
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/home/gpupo/workspace/gpupo/container-orchestration/var/log"
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: app-data
  labels:
    type: local
spec:
  storageClassName: app-data-volume
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/home/gpupo/workspace/gpupo/container-orchestration/var/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: app-data
  name: app-data
spec:
  storageClassName: app-data-volume
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: logs-data
  name: logs-data
spec:
  storageClassName: app-logs-volume
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.version: 1.13.0 (84fa826)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-upstream
  name: nginx-upstream
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nginx-upstream
    spec:
      containers:
      - image: gpupo/container-orchestration:nginx-upstream-latest
        name: nginx-upstream
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
        - mountPath: /var/logs/nginx
          name: logs-data
        - mountPath: /var/www2/app
          name: app-data
      restartPolicy: Always
      volumes:
      - name: logs-data
        persistentVolumeClaim:
          claimName: logs-data
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.version: 1.13.0 (84fa826)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-upstream
  name: nginx-upstream
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: nginx-upstream
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.version: 1.13.0 (84fa826)
  creationTimestamp: null
  labels:
    io.kompose.service: php
  name: php
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: php
    spec:
      containers:
      - image: gpupo/container-orchestration:php-latest
        name: php
        ports:
        - containerPort: 9000
        resources: {}
        volumeMounts:
        - mountPath: /var/www/app
          name: app-data
      restartPolicy: Always
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.version: 1.13.0 (84fa826)
  creationTimestamp: null
  labels:
    io.kompose.service: php
  name: php
spec:
  ports:
  - name: "9000"
    port: 9000
    targetPort: 9000
  selector:
    io.kompose.service: php
status:
  loadBalancer: {}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
  - host: ingress.localhost
    http:
      paths:
      - backend:
          serviceName: nginx-upstream
          servicePort: 80
